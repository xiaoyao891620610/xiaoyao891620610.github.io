<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xiaoyao891620610.github.io</id>
    <title>萧瑟</title>
    <updated>2020-11-13T02:01:48.770Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://xiaoyao891620610.github.io"/>
    <link rel="self" href="https://xiaoyao891620610.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://xiaoyao891620610.github.io/images/avatar.png</logo>
    <icon>https://xiaoyao891620610.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 萧瑟</rights>
    <entry>
        <title type="html"><![CDATA[你尽力了吗? (来自中国著名网络安全专家小四scz)]]></title>
        <id>https://xiaoyao891620610.github.io/post/ni-jin-li-liao-ma-lai-zi-zhong-guo-zhu-ming-wang-luo-an-quan-zhuan-jia-xiao-si-scz/</id>
        <link href="https://xiaoyao891620610.github.io/post/ni-jin-li-liao-ma-lai-zi-zhong-guo-zhu-ming-wang-luo-an-quan-zhuan-jia-xiao-si-scz/">
        </link>
        <updated>2020-11-13T01:54:42.000Z</updated>
        <summary type="html"><![CDATA[<!-- more -->
<p>很多人问如何入门如何入门，我却不知道要问的是入什么门。 很少把某些好文章耐心从头看完，我这次就深有体会。比如袁哥的sniffer原理，一直以为自己对sniffer原理很清楚的，所以也就不曾仔细看过袁哥的这篇。后来有天晚上和袁哥讨论，如何通过端口读写直接获取mac地址，为什么antisniff可以获得真正的mac地址，而不受更改mac地址技术的影响，如何在linux下获得真正的mac地址。我一直对linux下的端口读写心存疑虑，总觉得在保护模式下的端口都做 了内存映象等等。结果袁哥问了我一句，你仔细看我写的文章没有，我楞，最近因为要印刷月刊，我整 理以前的很多文档，被迫认真过滤它们，才发现袁哥的文章让我又有新认识。再后来整理到tt的几篇缓 冲区溢出的，尤其是上面的关于Solaris可装载内核模块，那就更觉得惭愧了。 以前说书非借不能读，现在是文章留在硬盘上却不读。</p>
]]></summary>
        <content type="html"><![CDATA[<!-- more -->
<p>很多人问如何入门如何入门，我却不知道要问的是入什么门。 很少把某些好文章耐心从头看完，我这次就深有体会。比如袁哥的sniffer原理，一直以为自己对sniffer原理很清楚的，所以也就不曾仔细看过袁哥的这篇。后来有天晚上和袁哥讨论，如何通过端口读写直接获取mac地址，为什么antisniff可以获得真正的mac地址，而不受更改mac地址技术的影响，如何在linux下获得真正的mac地址。我一直对linux下的端口读写心存疑虑，总觉得在保护模式下的端口都做 了内存映象等等。结果袁哥问了我一句，你仔细看我写的文章没有，我楞，最近因为要印刷月刊，我整 理以前的很多文档，被迫认真过滤它们，才发现袁哥的文章让我又有新认识。再后来整理到tt的几篇缓 冲区溢出的，尤其是上面的关于Solaris可装载内核模块，那就更觉得惭愧了。 以前说书非借不能读，现在是文章留在硬盘上却不读。</p>
<!-- more -->
<p>其实本版已经很多经典文章了，也推荐了不少经典书籍了，有几个好好看过呢。W.Richard.Stevens的UNP我算是认真看过加了不少旁注，APUE就没有那么认真了，而卷II的一半认真看过，写过读书笔记，卷III就没有看一页。道格拉斯的卷I、卷III是认真看过几遍，卷II就只断续看过。而很多技术文章，如果搞到手了就懒得再看，却不知道这浪费了多少资源，忽略了多少资源。</p>
<!-- more -->
<p>BBS是真正能学到东西的地方吗？rain说不是的，我说也不是的。不过这里能开阔人的视野，能得到对大方向的指引，足够了。我一直都希望大家从这里学到的不是技术本身，而是学习方法和一种不再狂热的 淡然。很多技术，明天就会过时，如果你掌握的是学习方法，那你还有下一个机会，如果你掌握的仅仅是这个技术本身，你就没有机会了。</p>
<!-- more -->
<p>其实我对系统安全是真不懂，因为我一直都喜欢看程序写程序却不喜欢也没有能力攻击谁谁的主机/站点 。我所能在这里做的是，为大家提供一个方向，一种让你的狂热归于淡然的说教。如果你连&lt;&lt;Windows NT设备驱动程序编写&gt;&gt;、&lt;&lt;win9x系统编程&gt;&gt;都没有看过，却要写个什么隐藏自己的木马，搞笑。如果你 看都不看汇编语言，偏要问exploit code的原理，那我无法回答也不想回答你。总有人责问，要讨个说法纭纭，说什么提问却没有回答。不回答已经是正确的处理方式了，至少没有回你一句，看书去，对不对，至少没有扰乱版面让你生闷气。 Unix的man手册你要都看完了，想不会Unix都不行了。微软的MSDN、Platfor SDK DOC你要看完了，你想把Win编程想象得稍微困难点都找不到理由。</p>
<!-- more -->
<p>还是那句话，一个程序员做W.Richard.Stevens那个份上 ，做到逝世后还能叫全世界的顶级hacker们专门著文怀念，但生前却不曾著文攻击，想想看，那是一种什么样的境界，那是一份什么样的淡然。我们可以大肆讨论技术问题，可以就技术问题进行激烈的卓有成效的讨论，却无意进行基础知识、资源信息的版面重复。我刚在前面贴了一堆isbase的文章，开头就是主页标识，却在后面立刻问什么主页在哪里？前面刚刚讨论过如何修改mac地址，后面马上又来一个，前后相差不过3篇文章。选择沉默已经是很多朋友忍耐力的优异表现了。</p>
<!-- more -->
<p>这次sztcww问的关于socket号为什么选择4而不是3，就很有专业精神，虽然我也不清楚，但这样的问题 我就乐意代他请教tt本人，至少他认真看了文章研究过代码，而不是盲目地发问。如此讨论问题的同时 ，大家都可以提高。谁都乐意参与讨论这种问题。很多东西都是可以举一反三的。vertex的lids，被 packetstorm天天追踪更新，你要是看了THC的那三篇，觉得理解一个就理解了一堆，都是内核模块上的 手脚。你不看你怎么知道。我不想在这里陷入具体技术问题的讨论中去，你要是觉得该做点什么了，就自己去看自己去找。 没有什么人摆什么架子，也没有什么人生来就是干这个的。你自己问自己，尽力了吗？</p>
]]></content>
    </entry>
</feed>